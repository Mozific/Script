-- // ApertureHub - 100% Fixed & Working \\
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local Teams = game:GetService("Teams")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

local function debugPrint(msg)
    print("[ApertureHub]: " .. tostring(msg))
end

-- Load Rayfield
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
if not Rayfield then
    debugPrint("Failed to load Rayfield")
    return
end

-- Create Window
local Window = Rayfield:CreateWindow({
    Name = "Aperture Science Innovators",
    Title = "Ocyx",
    LoadingTitle = "Loading ApertureHub...",
    LoadingSubtitle = "by Ocyx",
    Theme = "Ocean",
    ConfigurationSaving = { Enabled = true, FolderName = "ApertureHubConfig", FileName = "Settings" },
    KeySystem = true,
    KeySettings = {
        Title = "Enter Access Code",
        Note = "GlaDOS or Meat",
        FileName = "ApertureKey",
        SaveKey = true,
        Key = {"GlaDOS", "Meat"}
    }
})

-- Tabs
local PlayerTab = Window:CreateTab("Player", 4483362458)
local VisualTab = Window:CreateTab("Visual", 4483362458)
local UniversalTab = Window:CreateTab("Universal", 4483362458)
local GameTab = Window:CreateTab("Game", 4483362458)

-- === PLAYER TAB ===
local defaultWalk = 16
local defaultJump = 50
local walkEnabled = false
local jumpEnabled = false
local walkValue = defaultWalk
local jumpValue = defaultJump

PlayerTab:CreateSlider({
    Name = "Walkspeed",
    Range = {16, 200},
    Increment = 1,
    CurrentValue = 16,
    Flag = "Walkspeed",
    Callback = function(v)
        walkValue = v
        if walkEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = v
        end
    end
})

PlayerTab:CreateSlider({
    Name = "JumpPower",
    Range = {50, 500},
    Increment = 1,
    CurrentValue = 50,
    Flag = "JumpPower",
    Callback = function(v)
        jumpValue = v
        if jumpEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.JumpPower = v
        end
    end
})

PlayerTab:CreateToggle({
    Name = "Enable Walkspeed",
    CurrentValue = false,
    Callback = function(state)
        walkEnabled = state
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = state and walkValue or defaultWalk
        end
    end
})

PlayerTab:CreateToggle({
    Name = "Enable JumpPower",
    CurrentValue = false,
    Callback = function(state)
        jumpEnabled = state
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.JumpPower = state and jumpValue or defaultJump
        end
    end
})

-- Noclip
local noclip = false
PlayerTab:CreateToggle({
    Name = "Noclip",
    CurrentValue = false,
    Callback = function(state)
        noclip = state
    end
})

RunService.Stepped:Connect(function()
    if noclip and LocalPlayer.Character then
        for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

-- === VISUAL TAB - ESP ===
local ESP = { Enabled = false, Names = false, Team = "All", MaxDist = 500 }
local highlights = {}
local espConn

local function createESP(plr)
    if plr == LocalPlayer or (ESP.Team ~= "All" and plr.Team and plr.Team.Name ~= ESP.Team) then return end
    local char = plr.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return end
    local hrp = char.HumanoidRootPart
    local myhrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if myhrp and (hrp.Position - myhrp.Position).Magnitude > ESP.MaxDist then return end

    local highlight = Instance.new("Highlight")
    highlight.Adornee = char
    highlight.FillColor = plr.Team and plr.Team.TeamColor.Color or Color3.fromRGB(255, 0, 0)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.95
    highlight.OutlineTransparency = 0.5
    highlight.Parent = char

    local nameGui
    if ESP.Names then
        nameGui = Instance.new("BillboardGui")
        nameGui.Size = UDim2.new(0, 40, 0, 10)
        nameGui.StudsOffset = Vector3.new(0, 1.5, 0)
        nameGui.AlwaysOnTop = false
        nameGui.Adornee = char:FindFirstChild("Head")
        local label = Instance.new("TextLabel", nameGui)
        label.Size = UDim2.new(1,0,1,0)
        label.BackgroundTransparency = 1
        label.Text = plr.Name
        label.TextColor3 = Color3.fromRGB(255,255,255)
        label.TextScaled = true
        label.TextStrokeTransparency = 0.9
        nameGui.Parent = char
    end

    highlights[plr] = {highlight = highlight, name = nameGui}
end

local function updateESP()
    for plr, data in pairs(highlights) do
        if not plr.Character or not plr.Character:FindFirstChild("HumanoidRootPart") then
            if data.highlight then data.highlight:Destroy() end
            if data.name then data.name:Destroy() end
            highlights[plr] = nil
        end
    end
end

VisualTab:CreateToggle({
    Name = "Enable ESP",
    CurrentValue = false,
    Callback = function(state)
        ESP.Enabled = state
        if state then
            for _, p in pairs(Players:GetPlayers()) do createESP(p) end
            espConn = RunService.Heartbeat:Connect(updateESP)
        else
            for _, data in pairs(highlights) do
                if data.highlight then data.highlight:Destroy() end
                if data.name then data.name:Destroy() end
            end
            highlights = {}
            if espConn then espConn:Disconnect() end
        end
    end
})

VisualTab:CreateToggle({
    Name = "Show Names",
    CurrentValue = false,
    Callback = function(state)
        ESP.Names = state
        if ESP.Enabled then
            for _, data in pairs(highlights) do
                if data.name then data.name:Destroy() end
            end
            for _, p in pairs(Players:GetPlayers()) do
                if highlights[p] and ESP.Names then
                    local char = p.Character
                    if char and char:FindFirstChild("Head") then
                        local nameGui = Instance.new("BillboardGui")
                        nameGui.Size = UDim2.new(0, 40, 0, 10)
                        nameGui.StudsOffset = Vector3.new(0, 1.5, 0)
                        nameGui.AlwaysOnTop = false
                        nameGui.Adornee = char.Head
                        local label = Instance.new("TextLabel", nameGui)
                        label.Size = UDim2.new(1,0,1,0)
                        label.BackgroundTransparency = 1
                        label.Text = p.Name
                        label.TextColor3 = Color3.fromRGB(255,255,255)
                        label.TextScaled = true
                        label.TextStrokeTransparency = 0.9
                        nameGui.Parent = char
                        highlights[p].name = nameGui
                    end
                end
            end
        end
    end
})

-- Team Filter
local teamList = {"All"}
for _, t in pairs(Teams:GetTeams()) do table.insert(teamList, t.Name) end

VisualTab:CreateDropdown({
    Name = "Team Filter",
    Options = teamList,
    CurrentOption = {"All"},
    Callback = function(opt)
        ESP.Team = opt[1]
        if ESP.Enabled then
            for p in pairs(highlights) do
                if highlights[p].highlight then highlights[p].highlight:Destroy() end
                if highlights[p].name then highlights[p].name:Destroy() end
            end
            highlights = {}
            for _, p in pairs(Players:GetPlayers()) do createESP(p) end
        end
    end
})

-- === SPECTATE ===
local spectating = nil
local lastPlayer = nil

VisualTab:CreateToggle({
    Name = "Spectate Player",
    CurrentValue = false,
    Callback = function(state)
        if not state then
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                Workspace.CurrentCamera.CameraSubject = LocalPlayer.Character.Humanoid
            end
            spectating = nil
        elseif lastPlayer then
            local p = Players:FindFirstChild(lastPlayer)
            if p and p.Character and p.Character:FindFirstChild("Humanoid") then
                spectating = p
                Workspace.CurrentCamera.CameraSubject = p.Character.Humanoid
            end
        end
    end
})

VisualTab:CreateDropdown({
    Name = "Select Player",
    Options = {},
    CurrentOption = {},
    Callback = function(opt)
        lastPlayer = opt[1]
        local p = Players:FindFirstChild(lastPlayer)
        if p and p.Character and p.Character:FindFirstChild("Humanoid") then
            spectating = p
            if VisualTab.Flags["Spectate Player"] then
                Workspace.CurrentCamera.CameraSubject = p.Character.Humanoid
            end
        end
    end
})

VisualTab:CreateButton({
    Name = "Refresh Players",
    Callback = function()
        local list = {}
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= LocalPlayer then table.insert(list, p.Name) end
        end
        VisualTab.Elements["Select Player"]:Refresh(list)
    end
})

-- === UNIVERSAL COMMANDS ===
local function safeLoad(url)
    pcall(function() loadstring(game:HttpGet(url))() end)
end

UniversalTab:CreateSection("Universal Commands")

UniversalTab:CreateButton({ Name = "Infinite Yield", Callback = function() safeLoad("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source") end })
UniversalTab:CreateButton({ Name = "Nameless Admin", Callback = function() safeLoad("https://raw.githubusercontent.com/Fantemil/Nameless-Admin/main/Source") end })
UniversalTab:CreateButton({ Name = "QuirkyCMDS", Callback = function() safeLoad("https://rawscripts.net/raw/Universal-Script-QuirkyCMD-FE-admin-8667") end })

-- FIXED: Reviz Admin V2 (Working)
UniversalTab:CreateButton({ 
    Name = "Reviz Admin V2", 
    Callback = function() 
        safeLoad("https://rawscripts.net/raw/Universal-Script-Reviz-Admin-V2-59431") 
    end 
})

UniversalTab:CreateButton({ Name = "Owl Hub", Callback = function() safeLoad("https://raw.githubusercontent.com/CriShoux/OwlHub/master/OwlHub.txt") end })

-- === MOBILE TOOLS ===
UniversalTab:CreateSection("Essentials")

UniversalTab:CreateButton({ Name = "Keyboard", Callback = function() safeLoad("https://rawscripts.net/raw/Universal-Script-key-buttons-25179") end })

-- Click TP
local clickTP = false
UniversalTab:CreateToggle({
    Name = "Click TP",
    CurrentValue = false,
    Callback = function(state) clickTP = state end
})

UserInputService.InputBegan:Connect(function(input)
    if clickTP and input.UserInputType == Enum.UserInputType.Touch then
        local pos = input.Position
        local cam = Workspace.CurrentCamera
        local ray = cam:ScreenPointToRay(pos.X, pos.Y)
        local hit = Workspace:FindPartOnRayWithIgnoreList(Ray.new(ray.Origin, ray.Direction * 1000), {LocalPlayer.Character})
        if hit then
            LocalPlayer.Character:MoveTo(hit.Position + Vector3.new(0, 3, 0))
        end
    end
end)
UniversalTab:CreateButton({ Name = "ChatSpy", Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/Dan41/Roblox-Scripts/refs/heads/main/CHAT%20SPY%20-%202025/ChatSpy2025.lua', true))()
        end
    end
end)
-- Mobile Fly
local fly = false
UniversalTab:CreateToggle({
    Name = "Mobile Fly",
    CurrentValue = false,
    Callback = function(state)
        fly = state
        if state and LocalPlayer.Character then
            local hrp = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if not hrp then return end

            local bv = Instance.new("BodyVelocity", hrp)
            bv.MaxForce = Vector3.new(4000,4000,4000)
            local bg = Instance.new("BodyGyro", hrp)
            bg.MaxTorque = Vector3.new(4000,4000,4000)

            local gui = Instance.new("ScreenGui", CoreGui)
            local btn = Instance.new("TextButton", gui)
            btn.Size = UDim2.new(0,80,0,80)
            btn.Position = UDim2.new(0.85,0,0.7,0)
            btn.Text = "UP"
            btn.BackgroundColor3 = Color3.fromRGB(0,170,255)
            btn.TextScaled = true

            local pressing = false
            btn.MouseButton1Down:Connect(function() pressing = true end)
            btn.MouseButton1Up:Connect(function() pressing = false end)

            RunService.Heartbeat:Connect(function()
                if fly and pressing then
                    bv.Velocity = Workspace.CurrentCamera.CFrame.LookVector * 50
                    bg.CFrame = Workspace.CurrentCamera.CFrame
                else
                    bv.Velocity = Vector3.new(0,0,0)
                end
            end)

            task.spawn(function()
                while fly do task.wait() end
                bv:Destroy(); bg:Destroy(); gui:Destroy()
            end)
        end
    end
})

UniversalTab:CreateButton({
    Name = "FPS Booster",
    Callback = function()
        settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
        for _, v in pairs(Workspace:GetDescendants()) do
            if v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Smoke") or v:IsA("Fire") then
                v.Enabled = false
            end
        end
    end
})

-- === CHARACTER RELOAD ===
LocalPlayer.CharacterAdded:Connect(function(char)
    task.wait(1)
    if walkEnabled and char:FindFirstChild("Humanoid") then
        char.Humanoid.WalkSpeed = walkValue
    end
    if jumpEnabled and char:FindFirstChild("Humanoid") then
        char.Humanoid.JumpPower = jumpValue
    end
end)

-- Player Join/Leave
Players.PlayerAdded:Connect(function(p)
    if ESP.Enabled then createESP(p) end
end)

Players.PlayerRemoving:Connect(function(p)
    if highlights[p] then
        if highlights[p].highlight then highlights[p].highlight:Destroy() end
        if highlights[p].name then highlights[p].name:Destroy() end
        highlights[p] = nil
    end
end)

debugPrint("ApertureHub Loaded - Reviz Admin V2 Fixed!")
-- Game Scripts Section
local GameSection = GameTab:CreateSection("Game Scripts")

-- Piggy Button
GameTab:CreateButton({
    Name = "Piggy",
    Callback = function()
        -- Replace this comment with your loadstring
        -- Example: loadstring(game:HttpGet("YOUR_URL_HERE"))()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/BalintTheDevXBack/Games/refs/heads/main/Piggy"))()
    end
})

-- GaG Button
GameTab:CreateButton({
    Name = "Grow A Garden",
    Callback = function()
        -- Replace this comment with your loadstring
        -- Example: loadstring(game:HttpGet("YOUR_URL_HERE"))()
       loadstring(game:HttpGet("https://raw.githubusercontent.com/BalintTheDevXBack/Games/refs/heads/main/GrowAGarden"))()
    end
})
GameTab :CreateButton({
    Name = "Brookhaven",
    Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/BalintTheDevXBack/Games/refs/heads/main/TIGER_X_Brookhaven"))()
    end
})